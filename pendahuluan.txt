REST: 
- REpresentational State Transfer
- standar komunikasi web

restful:
- get, post, put, delete
- benefit:
  - stateless: tidak memiliki state internal didalam servernya, hanya meminta request yang diminta
  - cacheable: lebih untuk endpoint get, bisa di simpan didalam server, jadi bisa dipanggil lagi
  - flexibility: tidak terikat pada satu response, bisa txt, json, xml, html.


projek:
- framework echo
- gorm: orm
- database: psql. run with docker
- membuat api service untuk restoran, yang bisa melihat menu, order, user login, user signup

clean architecture:
- membagi code menjadi beberapa layer (ex: entities, use-case, controller, delivery layer)
- membagi responsbililty masing-masing layer

gorm:
- untuk primary key, saat struct perlu di init propert `gorm:""primaryKey`
- untuk foriegh key, tinggal samain aja key nya
- Preload, buat get field jika berelasi isi field nya
- reference id untuk unique key agar tidak bisa dihit berkali2 jika sama
- json di model, untuk change key saat request data

middleware:
- cors origin
- hash password with argon2
- argon saat menyimpan database dengan format
- fmt.Sprintf mengisi data dengan format pada param
- cipher untuk encrypt decrypt, untuk mastikan walaupun sudah di hash masih ada 1 key lagi untuk encrypt (double encrypt) 
- noncesize berapa banyak byte yang di genarate untuk seal

go.sum:
- version manager, maybe seperti package-lock